APPLICATION,PROFILE,LABEL,CONFIG_KEY,CONFIG_VALUE
simurai-orchestrator,default,master,server.port,8093
simurai-orchestrator,default,master,camel.servlet.mapping.context-path,/simurai/*
simurai-orchestrator,default,master,server.servlet.context-path,/api

simurai-orchestrator,default,master,management.endpoints.web.exposure.include,*
simurai-orchestrator,default,master,management.endpoints.web.cors.allowed-origins,*
simurai-orchestrator,default,master,management.endpoints.web.cors.allowed-methods,GET

simurai-orchestrator,default,master,environment,stage
simurai-orchestrator,default,master,facilityNum,5505
simurai-orchestrator,default,master,stage,stage

simurai-orchestrator,default,master,simurai.resourceURL,http://simurai-resources:8092/resources?appName=simurai-orchestrator
simurai-orchestrator,default,master,kafka.broker.url,hawk-test-kafka.lab2.alpha.alertinnovation.com
simurai-orchestrator,default,master,kafka.broker.port,9092
simurai-orchestrator,default,master,kafka.broker.options.send,groupId=alert.${environment}.${facilityNum}&autoCommitEnable=false&maxPollIntervalMs=300000&maxPollRecords=1&requestTimeoutMs=60000&retryBackoffMs=60000&heartbeatIntervalMs=10000&sessionTimeoutMs=30000&headerSerializer=#stringToByteHeaderSerializerCustom&securityProtocol=SSL&sslTruststoreLocation=/appl/secrets/kafka.client.truststore.jks&sslTruststorePassword=kafkastore1!&sslKeystoreLocation=/appl/secrets/kafka.user.keystore.jks&sslKeystorePassword=kafkastore1!
simurai-orchestrator,default,master,kafka.broker.options.receive,groupId=alert.${environment}.${facilityNum}&autoCommitEnable=false&maxPollIntervalMs=300000&maxPollRecords=1&requestTimeoutMs=60000&retryBackoffMs=60000&heartbeatIntervalMs=10000&sessionTimeoutMs=30000&headerDeserializer=#byteToStringHeaderDeserializerCustom&securityProtocol=SSL&sslTruststoreLocation=/appl/secrets/kafka.client.truststore.jks&sslTruststorePassword=kafkastore1!&sslKeystoreLocation=/appl/secrets/kafka.user.keystore.jks&sslKeystorePassword=kafkastore1!

simurai-orchestrator,default,master,simurai.endpoints[0].name,triggerEventEndpoint
simurai-orchestrator,default,master,simurai.endpoints[0].type,POST
simurai-orchestrator,default,master,simurai.endpoints[0].uri,events
simurai-orchestrator,default,master,simurai.endpoints[1].name,fetchEventEndpoint
simurai-orchestrator,default,master,simurai.endpoints[1].type,GET
simurai-orchestrator,default,master,simurai.endpoints[1].uri,events
simurai-orchestrator,default,master,simurai.endpoints[2].name,batchStatusDeliveredEndpoint
simurai-orchestrator,default,master,simurai.endpoints[2].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[2].uri,kafka:hawkeye-${stage}-${facilityNum}-batch-status-delivered?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[3].name,doorStatusRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[3].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[3].uri,kafka:hawkeye-${stage}-${facilityNum}-door-status-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[4].name,dispenseTerminatedEndpoint
simurai-orchestrator,default,master,simurai.endpoints[4].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[4].uri,kafka:hawkeye-${stage}-${facilityNum}-dispense-terminated?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[5].name,doorMotionEndpoint
simurai-orchestrator,default,master,simurai.endpoints[5].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[5].uri,kafka:hawkeye-${stage}-${facilityNum}-door-motion?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[6].name,orderExtractRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[6].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[6].uri,kafka:hawkeye-${stage}-${facilityNum}-order-extract-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[7].name,failureResolutionEndpoint
simurai-orchestrator,default,master,simurai.endpoints[7].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[7].uri,kafka:hawkeye-${stage}-${facilityNum}-failure-resolution?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[8].name,doorStatusResponseEndpoint
simurai-orchestrator,default,master,simurai.endpoints[8].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[8].uri,kafka:alert-${stage}-door-status-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[9].name,extractionStatusEndpoint
simurai-orchestrator,default,master,simurai.endpoints[9].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[9].uri,kafka:alert-${stage}-order-status-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[10].name,batchReadyEndpoint
simurai-orchestrator,default,master,simurai.endpoints[10].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[10].uri,kafka:alert-${stage}-batch-status-ready?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[11].name,failureEventEndpoint
simurai-orchestrator,default,master,simurai.endpoints[11].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[11].uri,kafka:alert-${stage}-failure-event?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[12].name,portalFailureResolutionEndpoint
simurai-orchestrator,default,master,simurai.endpoints[12].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[12].uri,kafka:alert-${stage}-failure-resolution?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[13].name,resourceEndpoint
simurai-orchestrator,default,master,simurai.endpoints[13].type,GET
simurai-orchestrator,default,master,simurai.endpoints[13].uri,resources
simurai-orchestrator,default,master,simurai.endpoints[14].name,orderDropEndpoint
simurai-orchestrator,default,master,simurai.endpoints[14].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[14].uri,kafka:hawkeye-${stage}-${facilityNum}-order-drop?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[15].name,inventorySnapshotRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[15].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[15].uri,kafka:hawkeye-${stage}-${facilityNum}-inventory-snapshot-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[16].name,inventoryStateChangeRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[16].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[16].uri,kafka:hawkeye-${stage}-${facilityNum}-inventory-state-change-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}

simurai-orchestrator,default,master,simurai.events[0].id,1
simurai-orchestrator,default,master,simurai.events[0].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[0].name,DOOR_STATUS_REQUEST
simurai-orchestrator,default,master,simurai.events[0].format,JSON
simurai-orchestrator,default,master,simurai.events[0].source,Walmart
simurai-orchestrator,default,master,simurai.events[0].usage,Request Door status
simurai-orchestrator,default,master,simurai.events[0].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[1].id,2
simurai-orchestrator,default,master,simurai.events[1].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[1].name,DOOR_MOTION
simurai-orchestrator,default,master,simurai.events[1].format,JSON
simurai-orchestrator,default,master,simurai.events[1].source,Walmart
simurai-orchestrator,default,master,simurai.events[1].usage,Control the motion of the door
simurai-orchestrator,default,master,simurai.events[1].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[2].id,3
simurai-orchestrator,default,master,simurai.events[2].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[2].name,EXTRACTION_REQUEST
simurai-orchestrator,default,master,simurai.events[2].format,JSON
simurai-orchestrator,default,master,simurai.events[2].source,Walmart
simurai-orchestrator,default,master,simurai.events[2].usage,Request customer order totes to be delivered to a terminal for either automated or manual dispense
simurai-orchestrator,default,master,simurai.events[2].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[3].id,4
simurai-orchestrator,default,master,simurai.events[3].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[3].name,BATCH_DELIVERED
simurai-orchestrator,default,master,simurai.events[3].format,JSON
simurai-orchestrator,default,master,simurai.events[3].source,Walmart
simurai-orchestrator,default,master,simurai.events[3].usage,When a batch of containers has been delivered successfully to a customer at dispense door
simurai-orchestrator,default,master,simurai.events[3].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[4].id,5
simurai-orchestrator,default,master,simurai.events[4].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[4].name,DISPENSE_TERMINATED
simurai-orchestrator,default,master,simurai.events[4].format,JSON
simurai-orchestrator,default,master,simurai.events[4].source,Walmart
simurai-orchestrator,default,master,simurai.events[4].usage,When the customer has terminated dispense at a terminal
simurai-orchestrator,default,master,simurai.events[4].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[5].id,6
simurai-orchestrator,default,master,simurai.events[5].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[5].name,FAILURE_RESOLUTION
simurai-orchestrator,default,master,simurai.events[5].format,JSON
simurai-orchestrator,default,master,simurai.events[5].source,Walmart
simurai-orchestrator,default,master,simurai.events[5].usage,Provides notification that a failure event sent through the "Failure Event" interface has been resolved
simurai-orchestrator,default,master,simurai.events[5].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[6].id,7
simurai-orchestrator,default,master,simurai.events[6].name,FETCH_EVENT
simurai-orchestrator,default,master,simurai.events[6].source,Walmart
simurai-orchestrator,default,master,simurai.events[7].id,8
simurai-orchestrator,default,master,simurai.events[7].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[7].name,DOOR_STATUS
simurai-orchestrator,default,master,simurai.events[7].format,JSON
simurai-orchestrator,default,master,simurai.events[7].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[7].usage,In response to the Door Status Request message and anytime a door becomes available or unavailable and is opened or closed for dispense
simurai-orchestrator,default,master,simurai.events[7].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[8].id,9
simurai-orchestrator,default,master,simurai.events[8].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[8].name,EXTRACTION_STATUS
simurai-orchestrator,default,master,simurai.events[8].format,JSON
simurai-orchestrator,default,master,simurai.events[8].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[8].usage,The Extraction Status interface provides the status of an order that is being extracted for dispense
simurai-orchestrator,default,master,simurai.events[8].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[9].id,10
simurai-orchestrator,default,master,simurai.events[9].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[9].name,BATCH_READY
simurai-orchestrator,default,master,simurai.events[9].format,JSON
simurai-orchestrator,default,master,simurai.events[9].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[9].usage,The Batch Ready interface is used to notify Walmart when a batch of containers is ready for collection by the customer at the dispense door
simurai-orchestrator,default,master,simurai.events[9].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[10].id,11
simurai-orchestrator,default,master,simurai.events[10].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[10].name,FAILURE_EVENT
simurai-orchestrator,default,master,simurai.events[10].format,JSON
simurai-orchestrator,default,master,simurai.events[10].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[10].usage,The Failure Event interface is used to notify Walmart of any issues with the dispense terminals
simurai-orchestrator,default,master,simurai.events[10].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[11].id,12
simurai-orchestrator,default,master,simurai.events[11].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[11].name,FAILURE_RESOLUTION
simurai-orchestrator,default,master,simurai.events[11].format,JSON
simurai-orchestrator,default,master,simurai.events[11].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[11].usage,Provides notification that a failure event sent through the "Failure Event" interface has been resolved
simurai-orchestrator,default,master,simurai.events[11].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[12].id,13
simurai-orchestrator,default,master,simurai.events[12].name,GET_RESOURCE
simurai-orchestrator,default,master,simurai.events[12].source,Walmart
simurai-orchestrator,default,master,simurai.events[13].id,14
simurai-orchestrator,default,master,simurai.events[13].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[13].name,ORDER_DROP
simurai-orchestrator,default,master,simurai.events[13].format,JSON
simurai-orchestrator,default,master,simurai.events[13].source,Walmart
simurai-orchestrator,default,master,simurai.events[13].usage,Provides the MFC with orders that are available for fulfillment
simurai-orchestrator,default,master,simurai.events[13].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[14].id,15
simurai-orchestrator,default,master,simurai.events[14].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[14].name,INVENTORY_SNAPSHOT_REQUEST
simurai-orchestrator,default,master,simurai.events[14].format,JSON
simurai-orchestrator,default,master,simurai.events[14].source,Walmart
simurai-orchestrator,default,master,simurai.events[14].usage,Request Inventory status
simurai-orchestrator,default,master,simurai.events[14].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[15].id,16
simurai-orchestrator,default,master,simurai.events[15].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[15].name,INVENTORY_STATE_CHANGE_REQUEST
simurai-orchestrator,default,master,simurai.events[15].format,JSON
simurai-orchestrator,default,master,simurai.events[15].source,Walmart
simurai-orchestrator,default,master,simurai.events[15].usage,Request status change for the inventory in the MFC
simurai-orchestrator,default,master,simurai.events[15].errorQueue,alert-${stage}-errors

simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointname,triggerEventEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[0].eventId,1
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[0].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[0].targetEndpoint,doorStatusRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[1].eventId,2
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[1].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[1].targetEndpoint,doorMotionEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[2].eventId,3
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[2].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[2].targetEndpoint,orderExtractRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[3].eventId,4
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[3].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[3].targetEndpoint,batchStatusDeliveredEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[4].eventId,5
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[4].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[4].targetEndpoint,dispenseTerminatedEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[5].eventId,6
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[5].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[5].targetEndpoint,failureResolutionEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[6].eventId,15
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[6].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[6].targetEndpoint,inventorySnapshotRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[7].eventId,16
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[7].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[7].targetEndpoint,inventoryStateChangeRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[8].eventId,14
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[8].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[8].targetEndpoint,orderDropEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[1].endpointname,fetchEventEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[1].endpointEvents[0].eventId,7
simurai-orchestrator,default,master,simurai.eventEndpointMappings[1].endpointEvents[0].actions,"direct:fetchEvents"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[2].endpointname,doorStatusResponseEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[2].endpointEvents[0].eventId,8
simurai-orchestrator,default,master,simurai.eventEndpointMappings[2].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[3].endpointname,extractionStatusEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[3].endpointEvents[0].eventId,9
simurai-orchestrator,default,master,simurai.eventEndpointMappings[3].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[4].endpointname,batchReadyEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[4].endpointEvents[0].eventId,10
simurai-orchestrator,default,master,simurai.eventEndpointMappings[4].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[5].endpointname,failureEventEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[5].endpointEvents[0].eventId,11
simurai-orchestrator,default,master,simurai.eventEndpointMappings[5].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[6].endpointname,portalFailureResolutionEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[6].endpointEvents[0].eventId,12
simurai-orchestrator,default,master,simurai.eventEndpointMappings[6].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[7].endpointname,resourceEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[7].endpointEvents[0].eventId,13
simurai-orchestrator,default,master,simurai.eventEndpointMappings[7].endpointEvents[0].actions,"direct:getResource"