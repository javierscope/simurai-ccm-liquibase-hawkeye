APPLICATION,PROFILE,LABEL,CONFIG_KEY,CONFIG_VALUE
simurai-orchestrator,default,master,server.port,8093
simurai-orchestrator,default,master,camel.servlet.mapping.context-path,/simurai/*
simurai-orchestrator,default,master,server.servlet.context-path,/api

simurai-orchestrator,default,master,management.endpoints.web.exposure.include,*
simurai-orchestrator,default,master,management.endpoints.web.cors.allowed-origins,*
simurai-orchestrator,default,master,management.endpoints.web.cors.allowed-methods,GET
simurai-orchestrator,default,master,simurai.targets[0].name,Simurai-Resources
simurai-orchestrator,default,master,simurai.targets[0].versionUri,http://simurai-resources:8092/actuator/info
simurai-orchestrator,default,master,simurai.targets[1].name,Simurai-CCM
simurai-orchestrator,default,master,simurai.targets[1].versionUri,http://simurai-ccm:8080/actuator/info
simurai-orchestrator,default,master,simurai.targets[2].name,fusion-connect
simurai-orchestrator,default,master,simurai.targets[2].versionUri,http://hawk-test-01:8080/actuator/info

simurai-orchestrator,default,master,environment,stage
simurai-orchestrator,default,master,facilityNum,5505
simurai-orchestrator,default,master,stage,stage

simurai-orchestrator,default,master,simurai.resourceURL,http://simurai-resources:8092/resources?appName=simurai-orchestrator
simurai-orchestrator,default,master,kafka.broker.url,hawk-test-kafka.lab2.alpha.alertinnovation.com
simurai-orchestrator,default,master,kafka.broker.port,9092
simurai-orchestrator,default,master,kafka.broker.options.send,groupId=alert.${environment}.${facilityNum}&autoCommitEnable=false&maxPollIntervalMs=300000&maxPollRecords=1&requestTimeoutMs=60000&retryBackoffMs=60000&heartbeatIntervalMs=10000&sessionTimeoutMs=30000&headerSerializer=#stringToByteHeaderSerializerCustom&securityProtocol=SSL&sslTruststoreLocation=/appl/secrets/kafka.client.truststore.jks&sslTruststorePassword=kafkastore1!&sslKeystoreLocation=/appl/secrets/kafka.user.keystore.jks&sslKeystorePassword=kafkastore1!
simurai-orchestrator,default,master,kafka.broker.options.receive,groupId=alert.${environment}.${facilityNum}&autoCommitEnable=false&maxPollIntervalMs=300000&maxPollRecords=1&requestTimeoutMs=60000&retryBackoffMs=60000&heartbeatIntervalMs=10000&sessionTimeoutMs=30000&headerDeserializer=#byteToStringHeaderDeserializerCustom&securityProtocol=SSL&sslTruststoreLocation=/appl/secrets/kafka.client.truststore.jks&sslTruststorePassword=kafkastore1!&sslKeystoreLocation=/appl/secrets/kafka.user.keystore.jks&sslKeystorePassword=kafkastore1!

simurai-orchestrator,default,master,simurai.endpoints[0].name,triggerEventEndpoint
simurai-orchestrator,default,master,simurai.endpoints[0].type,POST
simurai-orchestrator,default,master,simurai.endpoints[0].uri,events
simurai-orchestrator,default,master,simurai.endpoints[1].name,fetchEventEndpoint
simurai-orchestrator,default,master,simurai.endpoints[1].type,GET
simurai-orchestrator,default,master,simurai.endpoints[1].uri,events
simurai-orchestrator,default,master,simurai.endpoints[2].name,batchStatusDeliveredEndpoint
simurai-orchestrator,default,master,simurai.endpoints[2].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[2].uri,kafka:hawkeye-${stage}-${facilityNum}-batch-status-delivered?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[3].name,doorStatusRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[3].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[3].uri,kafka:hawkeye-${stage}-${facilityNum}-door-status-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[4].name,dispenseTerminatedEndpoint
simurai-orchestrator,default,master,simurai.endpoints[4].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[4].uri,kafka:hawkeye-${stage}-${facilityNum}-dispense-terminated?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[5].name,doorMotionEndpoint
simurai-orchestrator,default,master,simurai.endpoints[5].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[5].uri,kafka:hawkeye-${stage}-${facilityNum}-door-motion?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[6].name,orderExtractRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[6].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[6].uri,kafka:hawkeye-${stage}-${facilityNum}-order-extract-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[7].name,failureResolutionEndpoint
simurai-orchestrator,default,master,simurai.endpoints[7].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[7].uri,kafka:hawkeye-${stage}-${facilityNum}-failure-resolution?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[8].name,doorStatusResponseEndpoint
simurai-orchestrator,default,master,simurai.endpoints[8].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[8].uri,kafka:alert-${stage}-door-status-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[9].name,extractionStatusEndpoint
simurai-orchestrator,default,master,simurai.endpoints[9].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[9].uri,kafka:alert-${stage}-order-status-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[10].name,batchReadyEndpoint
simurai-orchestrator,default,master,simurai.endpoints[10].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[10].uri,kafka:alert-${stage}-batch-status-ready?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[11].name,failureEventEndpoint
simurai-orchestrator,default,master,simurai.endpoints[11].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[11].uri,kafka:alert-${stage}-failure-event?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[12].name,portalFailureResolutionEndpoint
simurai-orchestrator,default,master,simurai.endpoints[12].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[12].uri,kafka:alert-${stage}-failure-resolution?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[13].name,resourceEndpoint
simurai-orchestrator,default,master,simurai.endpoints[13].type,GET
simurai-orchestrator,default,master,simurai.endpoints[13].uri,resources
simurai-orchestrator,default,master,simurai.endpoints[14].name,walmartOrderEndpoint
simurai-orchestrator,default,master,simurai.endpoints[14].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[14].uri,kafka:hawkeye-${stage}-${facilityNum}-order-fulfillment?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[15].name,inventorySnapshotRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[15].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[15].uri,kafka:hawkeye-${stage}-${facilityNum}-inventory-snapshot-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[16].name,inventoryStateChangeRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[16].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[16].uri,kafka:hawkeye-${stage}-${facilityNum}-inventory-state-change-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[17].name,inventorySnapshotResponseEndpoint
simurai-orchestrator,default,master,simurai.endpoints[17].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[17].uri,kafka:alert-${stage}-inventory-snapshot-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[18].name,productDataEndpoint
simurai-orchestrator,default,master,simurai.endpoints[18].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[18].uri,kafka:hawkeye-${stage}-${facilityNum}-catalog-data?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[19].name,loadExtractEndpoint
simurai-orchestrator,default,master,simurai.endpoints[19].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[19].uri,kafka:hawkeye-${stage}-${facilityNum}-load-extract-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[20].name,capacityUtilizationRequestEndpoint
simurai-orchestrator,default,master,simurai.endpoints[20].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[20].uri,kafka:hawkeye-${stage}-${facilityNum}-capacity-util-request?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.send}
simurai-orchestrator,default,master,simurai.endpoints[21].name,inventoryEndpoint
simurai-orchestrator,default,master,simurai.endpoints[21].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[21].uri,kafka:alert-${stage}-misc-inventory-message-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[22].name,capacityUtilizationEndpoint
simurai-orchestrator,default,master,simurai.endpoints[22].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[22].uri,kafka:alert-${stage}-capacity-util-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[23].name,loadStatusEndpoint
simurai-orchestrator,default,master,simurai.endpoints[23].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[23].uri,kafka:alert-${stage}-load-status-response?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}
simurai-orchestrator,default,master,simurai.endpoints[24].name,mfcOrderEndpoint
simurai-orchestrator,default,master,simurai.endpoints[24].type,TOPIC
simurai-orchestrator,default,master,simurai.endpoints[24].uri,kafka:alert-${stage}-picking-events?brokers=${kafka.broker.url}:${kafka.broker.port}&${kafka.broker.options.receive}

simurai-orchestrator,default,master,simurai.events[0].id,1
simurai-orchestrator,default,master,simurai.events[0].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[0].name,DOOR_STATUS_REQUEST
simurai-orchestrator,default,master,simurai.events[0].format,JSON
simurai-orchestrator,default,master,simurai.events[0].source,Walmart
simurai-orchestrator,default,master,simurai.events[0].usage,Request Door status
simurai-orchestrator,default,master,simurai.events[0].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[1].id,2
simurai-orchestrator,default,master,simurai.events[1].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[1].name,DOOR_MOTION
simurai-orchestrator,default,master,simurai.events[1].format,JSON
simurai-orchestrator,default,master,simurai.events[1].source,Walmart
simurai-orchestrator,default,master,simurai.events[1].usage,Control the motion of the door
simurai-orchestrator,default,master,simurai.events[1].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[2].id,3
simurai-orchestrator,default,master,simurai.events[2].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[2].name,EXTRACTION_REQUEST
simurai-orchestrator,default,master,simurai.events[2].format,JSON
simurai-orchestrator,default,master,simurai.events[2].source,Walmart
simurai-orchestrator,default,master,simurai.events[2].usage,Request customer order totes to be delivered to a terminal for either automated or manual dispense
simurai-orchestrator,default,master,simurai.events[2].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[3].id,4
simurai-orchestrator,default,master,simurai.events[3].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[3].name,BATCH_DELIVERED
simurai-orchestrator,default,master,simurai.events[3].format,JSON
simurai-orchestrator,default,master,simurai.events[3].source,Walmart
simurai-orchestrator,default,master,simurai.events[3].usage,When a batch of containers has been delivered successfully to a customer at dispense door
simurai-orchestrator,default,master,simurai.events[3].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[4].id,5
simurai-orchestrator,default,master,simurai.events[4].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[4].name,DISPENSE_TERMINATED
simurai-orchestrator,default,master,simurai.events[4].format,JSON
simurai-orchestrator,default,master,simurai.events[4].source,Walmart
simurai-orchestrator,default,master,simurai.events[4].usage,When the customer has terminated dispense at a terminal
simurai-orchestrator,default,master,simurai.events[4].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[5].id,6
simurai-orchestrator,default,master,simurai.events[5].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[5].name,FAILURE_RESOLUTION
simurai-orchestrator,default,master,simurai.events[5].format,JSON
simurai-orchestrator,default,master,simurai.events[5].source,Walmart
simurai-orchestrator,default,master,simurai.events[5].usage,Provides notification that a failure event sent through the "Failure Event" interface has been resolved
simurai-orchestrator,default,master,simurai.events[5].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[6].id,7
simurai-orchestrator,default,master,simurai.events[6].name,FETCH_EVENT
simurai-orchestrator,default,master,simurai.events[6].source,Walmart
simurai-orchestrator,default,master,simurai.events[7].id,8
simurai-orchestrator,default,master,simurai.events[7].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[7].name,DOOR_STATUS
simurai-orchestrator,default,master,simurai.events[7].format,JSON
simurai-orchestrator,default,master,simurai.events[7].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[7].usage,In response to the Door Status Request message and anytime a door becomes available or unavailable and is opened or closed for dispense
simurai-orchestrator,default,master,simurai.events[7].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[8].id,9
simurai-orchestrator,default,master,simurai.events[8].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[8].name,EXTRACTION_STATUS
simurai-orchestrator,default,master,simurai.events[8].format,JSON
simurai-orchestrator,default,master,simurai.events[8].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[8].usage,The Extraction Status interface provides the status of an order that is being extracted for dispense
simurai-orchestrator,default,master,simurai.events[8].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[9].id,10
simurai-orchestrator,default,master,simurai.events[9].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[9].name,BATCH_READY
simurai-orchestrator,default,master,simurai.events[9].format,JSON
simurai-orchestrator,default,master,simurai.events[9].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[9].usage,The Batch Ready interface is used to notify Walmart when a batch of containers is ready for collection by the customer at the dispense door
simurai-orchestrator,default,master,simurai.events[9].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[10].id,11
simurai-orchestrator,default,master,simurai.events[10].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[10].name,FAILURE_EVENT
simurai-orchestrator,default,master,simurai.events[10].format,JSON
simurai-orchestrator,default,master,simurai.events[10].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[10].usage,The Failure Event interface is used to notify Walmart of any issues with the dispense terminals
simurai-orchestrator,default,master,simurai.events[10].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[11].id,12
simurai-orchestrator,default,master,simurai.events[11].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[11].name,FAILURE_RESOLUTION
simurai-orchestrator,default,master,simurai.events[11].format,JSON
simurai-orchestrator,default,master,simurai.events[11].source,PORTAL/T1
simurai-orchestrator,default,master,simurai.events[11].usage,Provides notification that a failure event sent through the "Failure Event" interface has been resolved
simurai-orchestrator,default,master,simurai.events[11].errorQueue,mfc-source-error
simurai-orchestrator,default,master,simurai.events[12].id,13
simurai-orchestrator,default,master,simurai.events[12].name,GET_RESOURCE
simurai-orchestrator,default,master,simurai.events[12].source,Walmart
simurai-orchestrator,default,master,simurai.events[13].id,14
simurai-orchestrator,default,master,simurai.events[13].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[13].name,ORDER_DROP
simurai-orchestrator,default,master,simurai.events[13].format,JSON
simurai-orchestrator,default,master,simurai.events[13].source,Walmart
simurai-orchestrator,default,master,simurai.events[13].usage,Provides the MFC with orders that are available for fulfillment
simurai-orchestrator,default,master,simurai.events[13].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[14].id,15
simurai-orchestrator,default,master,simurai.events[14].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[14].name,INVENTORY_SNAPSHOT_REQUEST
simurai-orchestrator,default,master,simurai.events[14].format,JSON
simurai-orchestrator,default,master,simurai.events[14].source,Walmart
simurai-orchestrator,default,master,simurai.events[14].usage,Request Inventory status
simurai-orchestrator,default,master,simurai.events[14].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[15].id,16
simurai-orchestrator,default,master,simurai.events[15].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[15].name,INVENTORY_STATE_CHANGE_REQUEST
simurai-orchestrator,default,master,simurai.events[15].format,JSON
simurai-orchestrator,default,master,simurai.events[15].source,Walmart
simurai-orchestrator,default,master,simurai.events[15].usage,Request status change for the inventory in the MFC
simurai-orchestrator,default,master,simurai.events[15].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[16].id,17
simurai-orchestrator,default,master,simurai.events[16].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[16].name,INVENTORY_SNAPSHOT
simurai-orchestrator,default,master,simurai.events[16].format,JSON
simurai-orchestrator,default,master,simurai.events[16].source,MFC
simurai-orchestrator,default,master,simurai.events[16].usage,In response to Inventory Snapshot Request
simurai-orchestrator,default,master,simurai.events[16].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[17].id,18
simurai-orchestrator,default,master,simurai.events[17].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[17].name,PRODUCT_DATA
simurai-orchestrator,default,master,simurai.events[17].format,JSON
simurai-orchestrator,default,master,simurai.events[17].source,Walmart
simurai-orchestrator,default,master,simurai.events[17].usage,The interface is used for adding updating and deleting products aligned for fulfillment to the MFC
simurai-orchestrator,default,master,simurai.events[17].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[18].id,19
simurai-orchestrator,default,master,simurai.events[18].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[18].name,LOAD_EXTRACT
simurai-orchestrator,default,master,simurai.events[18].format,JSON
simurai-orchestrator,default,master,simurai.events[18].source,Walmart
simurai-orchestrator,default,master,simurai.events[18].usage,When a load is ready to be extracted from the MFC for delivery
simurai-orchestrator,default,master,simurai.events[18].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[19].id,20
simurai-orchestrator,default,master,simurai.events[19].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[19].name,CAPACITY_UTILIZATION_REQUEST
simurai-orchestrator,default,master,simurai.events[19].format,JSON
simurai-orchestrator,default,master,simurai.events[19].source,Walmart
simurai-orchestrator,default,master,simurai.events[19].usage,On demand based or as scheduled when capacity utilization information is required for assortment and replenishment planning
simurai-orchestrator,default,master,simurai.events[19].errorQueue,alert-${stage}-errors
simurai-orchestrator,default,master,simurai.events[20].id,21
simurai-orchestrator,default,master,simurai.events[20].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[20].name,INVENTORY_ADJUSTMENT
simurai-orchestrator,default,master,simurai.events[20].format,JSON
simurai-orchestrator,default,master,simurai.events[20].source,MFC
simurai-orchestrator,default,master,simurai.events[20].usage,: when an inventory quantity discrepancy is discovered in the MFC and is being reported to Walmart
simurai-orchestrator,default,master,simurai.events[20].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[21].id,22
simurai-orchestrator,default,master,simurai.events[21].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[21].name,CAPACITY_UTILIZATION
simurai-orchestrator,default,master,simurai.events[21].format,JSON
simurai-orchestrator,default,master,simurai.events[21].source,MFC
simurai-orchestrator,default,master,simurai.events[21].usage,In response to capacity utilization request
simurai-orchestrator,default,master,simurai.events[21].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[22].id,23
simurai-orchestrator,default,master,simurai.events[22].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[22].name,LOAD_STATUS
simurai-orchestrator,default,master,simurai.events[22].format,JSON
simurai-orchestrator,default,master,simurai.events[22].source,MFC
simurai-orchestrator,default,master,simurai.events[22].usage,When the status of load changes as it is extracted for delivery
simurai-orchestrator,default,master,simurai.events[22].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[23].id,24
simurai-orchestrator,default,master,simurai.events[23].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[23].name,INVENTORY_REMOVAL
simurai-orchestrator,default,master,simurai.events[23].format,JSON
simurai-orchestrator,default,master,simurai.events[23].source,MFC
simurai-orchestrator,default,master,simurai.events[23].usage,when physical inventory is being removed from the MFC and handed over to Walmart for handling
simurai-orchestrator,default,master,simurai.events[23].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[24].id,25
simurai-orchestrator,default,master,simurai.events[24].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[24].name,INVENTORY_STATE_CHANGE
simurai-orchestrator,default,master,simurai.events[24].format,JSON
simurai-orchestrator,default,master,simurai.events[24].source,MFC
simurai-orchestrator,default,master,simurai.events[24].usage,when inventory is placed on hold or taken off of hold in the MFC
simurai-orchestrator,default,master,simurai.events[24].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[25].id,26
simurai-orchestrator,default,master,simurai.events[25].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[25].name,DECANTING
simurai-orchestrator,default,master,simurai.events[25].format,JSON
simurai-orchestrator,default,master,simurai.events[25].source,MFC
simurai-orchestrator,default,master,simurai.events[25].usage,as inventory is decanted.
simurai-orchestrator,default,master,simurai.events[25].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[26].id,27
simurai-orchestrator,default,master,simurai.events[26].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[26].name,REINDUCT
simurai-orchestrator,default,master,simurai.events[26].format,JSON
simurai-orchestrator,default,master,simurai.events[26].source,MFC
simurai-orchestrator,default,master,simurai.events[26].usage,When inventory is reinducted after resolving an exception
simurai-orchestrator,default,master,simurai.events[26].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[27].id,28
simurai-orchestrator,default,master,simurai.events[27].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[27].name,PICK_BEGIN
simurai-orchestrator,default,master,simurai.events[27].format,JSON
simurai-orchestrator,default,master,simurai.events[27].source,MFC
simurai-orchestrator,default,master,simurai.events[27].usage,When picking of an order starts
simurai-orchestrator,default,master,simurai.events[27].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[28].id,29
simurai-orchestrator,default,master,simurai.events[28].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[28].name,PICK_EVENT
simurai-orchestrator,default,master,simurai.events[28].format,JSON
simurai-orchestrator,default,master,simurai.events[28].source,MFC
simurai-orchestrator,default,master,simurai.events[28].usage,The Pick Event interface notifies Walmart that any picking activity has occurred
simurai-orchestrator,default,master,simurai.events[28].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[29].id,30
simurai-orchestrator,default,master,simurai.events[29].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[29].name,PICK_COMPLETE
simurai-orchestrator,default,master,simurai.events[29].format,JSON
simurai-orchestrator,default,master,simurai.events[29].source,MFC
simurai-orchestrator,default,master,simurai.events[29].usage,When picking of an order is completed
simurai-orchestrator,default,master,simurai.events[29].errorQueue,mfc_source_error
simurai-orchestrator,default,master,simurai.events[30].id,31
simurai-orchestrator,default,master,simurai.events[30].tenant,WALMART
simurai-orchestrator,default,master,simurai.events[30].name,PICK_ORDER_CANCEL
simurai-orchestrator,default,master,simurai.events[30].format,JSON
simurai-orchestrator,default,master,simurai.events[30].source,Walmart
simurai-orchestrator,default,master,simurai.events[30].usage,The Order Cancel interface notifies the MFC that some or all of the lines for an order already sent via the “Order Drop” have been cancelled
simurai-orchestrator,default,master,simurai.events[30].errorQueue,alert-${stage}-errors

simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointname,triggerEventEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[0].eventId,1
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[0].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[0].targetEndpoint,doorStatusRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[1].eventId,2
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[1].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[1].targetEndpoint,doorMotionEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[2].eventId,3
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[2].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[2].targetEndpoint,orderExtractRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[3].eventId,4
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[3].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[3].targetEndpoint,batchStatusDeliveredEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[4].eventId,5
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[4].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[4].targetEndpoint,dispenseTerminatedEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[5].eventId,6
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[5].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[5].targetEndpoint,failureResolutionEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[6].eventId,14
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[6].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[6].targetEndpoint,walmartOrderEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[7].eventId,15
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[7].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[7].targetEndpoint,inventorySnapshotRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[8].eventId,16
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[8].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[8].targetEndpoint,inventoryStateChangeRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[12].eventId,31
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[12].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[12].targetEndpoint,walmartOrderEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[1].endpointname,fetchEventEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[1].endpointEvents[0].eventId,7
simurai-orchestrator,default,master,simurai.eventEndpointMappings[1].endpointEvents[0].actions,"direct:fetchEvents"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[2].endpointname,doorStatusResponseEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[2].endpointEvents[0].eventId,8
simurai-orchestrator,default,master,simurai.eventEndpointMappings[2].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[3].endpointname,extractionStatusEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[3].endpointEvents[0].eventId,9
simurai-orchestrator,default,master,simurai.eventEndpointMappings[3].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[4].endpointname,batchReadyEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[4].endpointEvents[0].eventId,10
simurai-orchestrator,default,master,simurai.eventEndpointMappings[4].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[5].endpointname,failureEventEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[5].endpointEvents[0].eventId,11
simurai-orchestrator,default,master,simurai.eventEndpointMappings[5].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[6].endpointname,portalFailureResolutionEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[6].endpointEvents[0].eventId,12
simurai-orchestrator,default,master,simurai.eventEndpointMappings[6].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[7].endpointname,resourceEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[7].endpointEvents[0].eventId,13
simurai-orchestrator,default,master,simurai.eventEndpointMappings[7].endpointEvents[0].actions,"direct:getResource"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[8].endpointname,inventorySnapshotResponseEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[8].endpointEvents[0].eventId,17
simurai-orchestrator,default,master,simurai.eventEndpointMappings[8].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[9].eventId,18
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[9].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[9].targetEndpoint,productDataEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[10].eventId,19
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[10].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[10].targetEndpoint,loadExtractEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[11].eventId,20
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[11].actions,"direct:triggerEvent"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[0].endpointEvents[11].targetEndpoint,capacityUtilizationRequestEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointname,inventoryEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[0].eventId,21
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[1].eventId,24
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[1].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[2].eventId,25
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[2].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[3].eventId,26
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[3].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[4].eventId,27
simurai-orchestrator,default,master,simurai.eventEndpointMappings[9].endpointEvents[4].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[10].endpointname,capacityUtilizationEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[10].endpointEvents[0].eventId,22
simurai-orchestrator,default,master,simurai.eventEndpointMappings[10].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[11].endpointname,loadStatusEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[11].endpointEvents[0].eventId,23
simurai-orchestrator,default,master,simurai.eventEndpointMappings[11].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[12].endpointname,mfcOrderEndpoint
simurai-orchestrator,default,master,simurai.eventEndpointMappings[12].endpointEvents[0].eventId,28
simurai-orchestrator,default,master,simurai.eventEndpointMappings[12].endpointEvents[0].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[12].endpointEvents[1].eventId,29
simurai-orchestrator,default,master,simurai.eventEndpointMappings[12].endpointEvents[1].actions,"direct:log"
simurai-orchestrator,default,master,simurai.eventEndpointMappings[12].endpointEvents[2].eventId,30
simurai-orchestrator,default,master,simurai.eventEndpointMappings[12].endpointEvents[2].actions,"direct:log"
